import matplotlib.pyplot as plt

import HansenC as HC
import HansenCdata as HCdata
import Element as Element
import SmithCollapse as SC
import numpy as np
import Structures
import TPanel_trans as TPT

#pan_strain = np.array([-0.0269268292683, -0.00269268292683, -0.00263882926829, -0.00258497560976, -0.00253112195122, -0.00247726829268, -0.00242341463415, -0.00236956097561, -0.00231570731707, -0.00226185365854, -0.002208, -0.00215414634146, -0.00210029268293, -0.00204643902439, -0.00199258536585, -0.00193873170732, -0.00188487804878, -0.00183102439024, -0.00177717073171, -0.00172331707317, -0.00166946341463, -0.0016156097561, -0.00156175609756, -0.00150790243902, -0.00145404878049, -0.00140019512195, -0.00134634146341, -0.00129248780488, -0.00123863414634, -0.0011847804878, -0.00113092682927, -0.00107707317073, -0.0010232195122, -0.000969365853659, -0.000915512195122, -0.000861658536585, -0.000807804878049, -0.000753951219512, -0.000700097560976, -0.000646243902439, -0.000592390243902, -0.000538536585366, -0.000484682926829, -0.000430829268293, -0.000376975609756, -0.00032312195122, -0.000269268292683, -0.000215414634146, -0.00016156097561, -0.000107707317073, -5.38536585366e-05, 3.34629901805e-18, 5.38536585366e-05, 0.000107707317073, 0.00016156097561, 0.000215414634146, 0.000269268292683, 0.00032312195122, 0.000376975609756, 0.000430829268293, 0.000484682926829, 0.000538536585366, 0.000592390243902, 0.000646243902439, 0.000700097560976, 0.000753951219512, 0.000807804878049, 0.000861658536585, 0.000915512195122, 0.000969365853659, 0.0010232195122, 0.00107707317073, 0.00113092682927, 0.0011847804878, 0.0012389044472, 0.00129388167971, 0.00134982465204, 0.00140660255818, 0.00146423577979, 0.00152270613083, 0.00158213545263, 0.00164230923988, 0.00170329493831, 0.00176507946102, 0.00182765001565, 0.00189099411402, 0.00195509957729, 0.00202014626959, 0.00208579379216, 0.00215217723746, 0.00221928618764, 0.00228711046609, 0.0023556401318, 0.00242486547346, 0.00249477700357, 0.00256536545245, 0.00263662176225, 0.00270853708104, 0.00278592943147, 0.00283375155874, 0.00288413379457, 0.00293733940325, 0.00299366523476, 0.00305344698659, 0.00311706545157, 0.00318369309726, 0.00325760734766, 0.00333559261377, 0.00341956200246, 0.00351026876591, 0.00360858650378, 0.00371553294661, 0.00383229940297, 0.00396028746495, 0.00410115509001, 0.00425687489862, 0.00442980853219, 0.00462280233235, 0.00483931162385, 0.00508356380595, 0.00536077474335, 0.00566910855436, 0.00604172679682, 0.00646402616788, 0.00695771093892, 0.00754022962617, 0.00823469133512, 0.00907222098225, 0.0100955431612, 0.0113645866435, 0.0129655268151, 0.015025910847, 0.0176582180623, 0.0214906232175, 0.026459041139, 0.03434036231])
#pan_stress = np.array([-552000000.0, -552000000.0, -540960000.0, -529920000.0, -518880000.0, -507840000.0, -496800000.0, -485760000.0, -474720000.0, -463680000.0, -452640000.0, -441600000.0, -430560000.0, -419520000.0, -408480000.0, -397440000.0, -386400000.0, -375360000.0, -364320000.0, -353280000.0, -342240000.0, -331200000.0, -320160000.0, -309120000.0, -298080000.0, -287040000.0, -276000000.0, -264960000.0, -253920000.0, -242880000.0, -231840000.0, -220800000.0, -209760000.0, -198720000.0, -187680000.0, -176640000.0, -165600000.0, -154560000.0, -143520000.0, -132480000.0, -121440000.0, -110400000.0, -99360000.0, -88320000.0, -77280000.0, -66240000.0, -55200000.0, -44160000.0, -33120000.0, -22080000.0, -11040000.0, 6.85991298699e-07, 11040000.0, 22080000.0, 33120000.0, 44160000.0, 55200000.0, 66240000.0, 77280000.0, 88320000.0, 99360000.0, 110400000.0, 121440000.0, 132480000.0, 143520000.0, 154560000.0, 165600000.0, 176640000.0, 187680000.0, 198720000.0, 209760000.0, 220800000.0, 231840000.0, 242880000.0, 253920000.0, 264960000.0, 276000000.0, 287040000.0, 298080000.0, 309120000.0, 320160000.0, 331200000.0, 342240000.0, 353280000.0, 364320000.0, 375360000.0, 386400000.0, 397440000.0, 408480000.0, 419520000.0, 430560000.0, 441600000.0, 452640000.0, 463680000.0, 474720000.0, 485760000.0, 496800000.0, 507840000.0, 485760000.0, 474720000.0, 463680000.0, 452640000.0, 441600000.0, 430560000.0, 419520000.0, 408480000.0, 397440000.0, 386400000.0, 375360000.0, 364320000.0, 353280000.0, 342240000.0, 331200000.0, 320160000.0, 309120000.0, 298080000.0, 287040000.0, 276000000.0, 264960000.0, 253920000.0, 242880000.0, 231840000.0, 220800000.0, 209760000.0, 198720000.0, 187680000.0, 176640000.0, 165600000.0, 154560000.0, 143520000.0, 132480000.0, 121440000.0, 110400000.0, 99360000.0, 88320000.0, 77280000.0])
#pan_AE = np.array([0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409410388208, 0.00409321064145, 0.00408969337958, 0.00408353914978, 0.00407545418649, 0.00406562033185, 0.00405430115794, 0.00404136807076, 0.00402754488236, 0.00401278515723, 0.00399723597443, 0.00398102565015, 0.00396426620723, 0.00394705549854, 0.00392910608936, 0.00391114956444, 0.00389295723807, 0.00387458655606, 0.00385608785841, 0.00383750524946, 0.00381887735441, 0.00380023797838, 0.00378161668148, 0.00376303928141, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352, 0.00374452829352])
#pan_Ys = 317e6;
#pan_E = 70.3e9

#GENERATE PANEL DATA############################################################
print ("Generating Cross Section...")
XSection = []

top_pmatl = Structures.EPMatl(317e6,70.3e9,0.33)
top_smatl = Structures.EPMatl(317e6,70.3e9,0.33)
top_panels = Structures.TPanel(0.3, 0.006, 0.004, 0.07, 0.0061, 0.04, 1.0, top_pmatl, top_smatl)
#Test Panel
BC3_pmatl = Structures.EPMatl(552e6,205e9,0.28)
BC3_smatl = Structures.EPMatl(552e6,205e9,0.28)
BC3_panel = Structures.TPanel(0.26333333333333336, 0.0103794449203, 0.00729250565438, 0.0971509509464, 0.00353208497908, 0.0769507383005, 1.8288, BC3_pmatl, BC3_smatl)
print (BC3_panel.getNA())

nstiff = 2
ntrans = 1
B = top_panels.getb() * (nstiff + 1)
L = top_panels.geta() * ntrans
twh = 0.14
twt = 0.008
tft = 0.0122
tfb = 0.08
BC3_tmatl = Structures.EPMatl(552e6,205e9,0.28)
BC3_TPanel = TPT.TPanel_trans(B, L, nstiff, ntrans, 0.0103794449203, 0.00729250565438, 0.0971509509464, 0.00353208497908, 0.0769507383005, twh, twt, tft, tfb, BC3_pmatl, BC3_smatl, BC3_tmatl)

H = HC.HansenC(BC3_TPanel)
strn = H._strn
strs = H._strss
AE = H._AE

for i in range(0,200):
    XSection.append(Element.Element(BC3_TPanel, strn, strs, AE, yloc = i)) #create an element object with the strain, stress, AE and zloc data
    print (i)

################################################################################

print ("Running Smith Progressive Collapse Method...")
UltMmt = SC.MUltimate(XSection) #Run Smith Method
print ("Curvature/moment data generated, ultimate moment on cross-section =',UltMmt,'N-m'")

#plt.plot(curvature,moment)
#plt.xlabel('curvature (radians)')
#plt.ylabel('Moment (N-m)')
#plt.show()